apiVersion: kafka.strimzi.io/v1beta1
kind: Kafka
metadata:
  name: my-cluster
  labels:
    app: my-cluster
spec:
  kafka:
    replicas: 3
    resources:
      requests:
        memory: 2Gi
        cpu: 500m
      limits:
        memory: 2Gi
        cpu: "1"
    jvmOptions:
      -Xms: 1024m
      -Xmx: 1024m
    listeners:
      plain:
        authentication:
          type: oauth
          validIssuerUri: https://keycloak.myproject.svc:8443/auth/realms/Internal
          jwksEndpointUri: https://keycloak.myproject.svc:8443/auth/realms/Internal/protocol/openid-connect/certs
          userNameClaim: preferred_username
          tlsTrustedCertificates:
            - secretName: sso-x509-https-secret
              certificate: tls.crt
      tls:
        authentication:
          type: oauth
          validIssuerUri: https://keycloak.myproject.svc:8443/auth/realms/Internal
          jwksEndpointUri: https://keycloak.myproject.svc:8443/auth/realms/Internal/protocol/openid-connect/certs
          userNameClaim: preferred_username
          tlsTrustedCertificates:
            - secretName: sso-x509-https-secret
              certificate: tls.crt
      external:
        type: route
        authentication:
          type: oauth
          validIssuerUri: https://keycloak-myproject.apps.jscholz.rhmw-integrations.net/auth/realms/External
          jwksEndpointUri: https://keycloak-myproject.apps.jscholz.rhmw-integrations.net/auth/realms/External/protocol/openid-connect/certs
          userNameClaim: preferred_username
          tlsTrustedCertificates:
            - secretName: keycloak-external-tls
              certificate: tls.crt
    authorization:
      type: simple
      superUsers:
        - CN=my-connect
        - my-connect
        - CN=my-bridge
        - my-bridge
        - service-account-kafka-connect
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 100Gi
        deleteClaim: true
    logging:
      type: inline
      loggers:
        log4j.logger.kafka: INFO
        log4j.logger.org.apache.kafka: INFO
        kafka.root.logger.level: INFO
        log4j.logger.io.strimzi.kafka.oauth: DEBUG
        log4j.logger.kafka.authorizer.logger: INFO
        log4j.logger.kafka.network.Acceptor: INFO
  zookeeper:
    replicas: 3
    resources:
      requests:
        memory: 1Gi
        cpu: "0.3"
      limits:
        memory: 1Gi
        cpu: "0.5"
    storage:
      type: persistent-claim
      size: 100Gi
      deleteClaim: true
  entityOperator:
    topicOperator:
      resources:
        requests:
          memory: 256Mi
          cpu: "0.1"
        limits:
          memory: 256Mi
          cpu: "0.5"
      logging:
        loggers:
          rootLogger.level: INFO
        type: inline
    userOperator:
      resources:
        requests:
          memory: 256Mi
          cpu: "0.1"
        limits:
          memory: 256Mi
          cpu: "0.5"
      logging:
        loggers:
          rootLogger.level: INFO
        type: inline
