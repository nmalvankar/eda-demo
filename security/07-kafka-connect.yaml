apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: kafka-connect
  labels:
    realm: internal
spec:
  realmSelector:
    matchLabels:
      realm: internal
  client:
    clientId: kafka-connect
    secret: kafka-connect-secret
    clientAuthenticatorType: client-secret
    enabled: true
    publicClient: false
    bearerOnly: false
    standardFlowEnabled: false
    implicitFlowEnabled: false
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    consentRequired : false
    fullScopeAllowed : false
    attributes:
      access.token.lifespan: "32140800"
---

apiVersion: v1
kind: Secret
metadata:
  name: my-connect-oauth
type: Opaque
data:
  clientSecret: a2Fma2EtY29ubmVjdC1zZWNyZXQ=
---

apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaConnect
metadata:
  name: my-connect-cluster
  labels:
    app: my-connect-cluster
  annotations:
    strimzi.io/use-connector-resources: "true"
spec:
  replicas: 1
  resources:
    requests:
      memory: 1Gi
      cpu: 100m
    limits:
      memory: 2Gi
      cpu: 200m
  bootstrapServers: my-cluster-kafka-bootstrap:9092
  config:
    key.converter: org.apache.kafka.connect.storage.StringConverter
    value.converter: org.apache.kafka.connect.storage.StringConverter
    key.converter.schemas.enable: false
    value.converter.schemas.enable: false
  metrics:
    lowercaseOutputName: true
  authentication:
    type: oauth
    tokenEndpointUri: https://keycloak.myproject.svc:8443/auth/realms/Internal/protocol/openid-connect/token
    clientId: kafka-connect
    clientSecret:
      secretName: my-connect-oauth
      key: clientSecret
    tlsTrustedCertificates:
      - secretName: sso-x509-https-secret
        certificate: tls.crt
---

apiVersion: kafka.strimzi.io/v1alpha1
kind: KafkaConnector
metadata:
  name: file-sink-connector
  labels:
    strimzi.io/cluster: my-connect-cluster
spec:
  class: FileStreamSink
  tasksMax: 3
  config:
    file: "/tmp/test.sink.txt"
    topics: "my-topic"